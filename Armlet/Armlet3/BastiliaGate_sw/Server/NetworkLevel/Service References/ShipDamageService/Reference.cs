//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetworkLevel.ShipDamageService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipStatus", Namespace="http://schemas.datacontract.org/2004/07/HonorInterfaces")]
    [System.SerializableAttribute()]
    public partial class ShipStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ShipGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NetworkLevel.ShipDamageService.ShipSubsystemStatus[] SubsystemStatusesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ShipGuid {
            get {
                return this.ShipGuidField;
            }
            set {
                if ((this.ShipGuidField.Equals(value) != true)) {
                    this.ShipGuidField = value;
                    this.RaisePropertyChanged("ShipGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NetworkLevel.ShipDamageService.ShipSubsystemStatus[] SubsystemStatuses {
            get {
                return this.SubsystemStatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsystemStatusesField, value) != true)) {
                    this.SubsystemStatusesField = value;
                    this.RaisePropertyChanged("SubsystemStatuses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipSubsystemStatus", Namespace="http://schemas.datacontract.org/2004/07/HonorInterfaces")]
    [System.SerializableAttribute()]
    public partial class ShipSubsystemStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NetworkLevel.ShipDamageService.RanmaRepairSeverity SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NetworkLevel.ShipDamageService.RandirSubsytsem SubSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NetworkLevel.ShipDamageService.RanmaRepairSeverity Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NetworkLevel.ShipDamageService.RandirSubsytsem SubSystem {
            get {
                return this.SubSystemField;
            }
            set {
                if ((this.SubSystemField.Equals(value) != true)) {
                    this.SubSystemField = value;
                    this.RaisePropertyChanged("SubSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RanmaRepairSeverity", Namespace="http://schemas.datacontract.org/2004/07/HonorInterfaces")]
    public enum RanmaRepairSeverity : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ready = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Easy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hard = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RandirSubsytsem", Namespace="http://schemas.datacontract.org/2004/07/HonorInterfaces")]
    public enum RandirSubsytsem : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Attack = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Defense = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wedge = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Navigation = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Life = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sails = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reactor = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShipDamageService.IServerDamageContract", CallbackContract=typeof(NetworkLevel.ShipDamageService.IServerDamageContractCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServerDamageContract {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerDamageContract/ServerConnect")]
        void ServerConnect();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServerDamageContract/ServerConnect")]
        System.IAsyncResult BeginServerConnect(System.AsyncCallback callback, object asyncState);
        
        void EndServerConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerDamageContract/SetAllSubsystemsStatuses")]
        void SetAllSubsystemsStatuses(NetworkLevel.ShipDamageService.ShipStatus[] shipStatuses);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServerDamageContract/SetAllSubsystemsStatuses")]
        System.IAsyncResult BeginSetAllSubsystemsStatuses(NetworkLevel.ShipDamageService.ShipStatus[] shipStatuses, System.AsyncCallback callback, object asyncState);
        
        void EndSetAllSubsystemsStatuses(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerDamageContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerDamageContract/DamageShip")]
        void DamageShip(System.Guid shipGuid, byte byteSeverity);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServerDamageContract/DamageShip")]
        System.IAsyncResult BeginDamageShip(System.Guid shipGuid, byte byteSeverity, System.AsyncCallback callback, object asyncState);
        
        void EndDamageShip(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerDamageContract/DestroyShip")]
        void DestroyShip(System.Guid shipGuid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServerDamageContract/DestroyShip")]
        System.IAsyncResult BeginDestroyShip(System.Guid shipGuid, System.AsyncCallback callback, object asyncState);
        
        void EndDestroyShip(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerDamageContractChannel : NetworkLevel.ShipDamageService.IServerDamageContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerDamageContractClient : System.ServiceModel.DuplexClientBase<NetworkLevel.ShipDamageService.IServerDamageContract>, NetworkLevel.ShipDamageService.IServerDamageContract {
        
        private BeginOperationDelegate onBeginServerConnectDelegate;
        
        private EndOperationDelegate onEndServerConnectDelegate;
        
        private System.Threading.SendOrPostCallback onServerConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetAllSubsystemsStatusesDelegate;
        
        private EndOperationDelegate onEndSetAllSubsystemsStatusesDelegate;
        
        private System.Threading.SendOrPostCallback onSetAllSubsystemsStatusesCompletedDelegate;
        
        public ServerDamageContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServerDamageContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServerDamageContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerDamageContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerDamageContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ServerConnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetAllSubsystemsStatusesCompleted;
        
        public void ServerConnect() {
            base.Channel.ServerConnect();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginServerConnect(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginServerConnect(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndServerConnect(System.IAsyncResult result) {
            base.Channel.EndServerConnect(result);
        }
        
        private System.IAsyncResult OnBeginServerConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginServerConnect(callback, asyncState);
        }
        
        private object[] OnEndServerConnect(System.IAsyncResult result) {
            this.EndServerConnect(result);
            return null;
        }
        
        private void OnServerConnectCompleted(object state) {
            if ((this.ServerConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ServerConnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ServerConnectAsync() {
            this.ServerConnectAsync(null);
        }
        
        public void ServerConnectAsync(object userState) {
            if ((this.onBeginServerConnectDelegate == null)) {
                this.onBeginServerConnectDelegate = new BeginOperationDelegate(this.OnBeginServerConnect);
            }
            if ((this.onEndServerConnectDelegate == null)) {
                this.onEndServerConnectDelegate = new EndOperationDelegate(this.OnEndServerConnect);
            }
            if ((this.onServerConnectCompletedDelegate == null)) {
                this.onServerConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnServerConnectCompleted);
            }
            base.InvokeAsync(this.onBeginServerConnectDelegate, null, this.onEndServerConnectDelegate, this.onServerConnectCompletedDelegate, userState);
        }
        
        public void SetAllSubsystemsStatuses(NetworkLevel.ShipDamageService.ShipStatus[] shipStatuses) {
            base.Channel.SetAllSubsystemsStatuses(shipStatuses);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetAllSubsystemsStatuses(NetworkLevel.ShipDamageService.ShipStatus[] shipStatuses, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetAllSubsystemsStatuses(shipStatuses, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetAllSubsystemsStatuses(System.IAsyncResult result) {
            base.Channel.EndSetAllSubsystemsStatuses(result);
        }
        
        private System.IAsyncResult OnBeginSetAllSubsystemsStatuses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NetworkLevel.ShipDamageService.ShipStatus[] shipStatuses = ((NetworkLevel.ShipDamageService.ShipStatus[])(inValues[0]));
            return this.BeginSetAllSubsystemsStatuses(shipStatuses, callback, asyncState);
        }
        
        private object[] OnEndSetAllSubsystemsStatuses(System.IAsyncResult result) {
            this.EndSetAllSubsystemsStatuses(result);
            return null;
        }
        
        private void OnSetAllSubsystemsStatusesCompleted(object state) {
            if ((this.SetAllSubsystemsStatusesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetAllSubsystemsStatusesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetAllSubsystemsStatusesAsync(NetworkLevel.ShipDamageService.ShipStatus[] shipStatuses) {
            this.SetAllSubsystemsStatusesAsync(shipStatuses, null);
        }
        
        public void SetAllSubsystemsStatusesAsync(NetworkLevel.ShipDamageService.ShipStatus[] shipStatuses, object userState) {
            if ((this.onBeginSetAllSubsystemsStatusesDelegate == null)) {
                this.onBeginSetAllSubsystemsStatusesDelegate = new BeginOperationDelegate(this.OnBeginSetAllSubsystemsStatuses);
            }
            if ((this.onEndSetAllSubsystemsStatusesDelegate == null)) {
                this.onEndSetAllSubsystemsStatusesDelegate = new EndOperationDelegate(this.OnEndSetAllSubsystemsStatuses);
            }
            if ((this.onSetAllSubsystemsStatusesCompletedDelegate == null)) {
                this.onSetAllSubsystemsStatusesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetAllSubsystemsStatusesCompleted);
            }
            base.InvokeAsync(this.onBeginSetAllSubsystemsStatusesDelegate, new object[] {
                        shipStatuses}, this.onEndSetAllSubsystemsStatusesDelegate, this.onSetAllSubsystemsStatusesCompletedDelegate, userState);
        }
    }
}
